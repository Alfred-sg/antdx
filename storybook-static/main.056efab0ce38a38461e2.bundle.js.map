{"version":3,"file":"main.056efab0ce38a38461e2.bundle.js","sources":["webpack:///./src/components/SearchableTable/index.tsx"],"sourcesContent":["import React, { Component, Children } from 'react';\nimport classnames from 'classnames';\nimport equals from 'shallow-equals';\nimport omit from 'omit';\nimport { Table } from 'antd';\nimport { SearchableTablePropTypes } from './proptypes';\nimport { SearchableTableState, Pagination, ColumnProps, FetchParams, Res } from './types';\nimport Column from './Column';\nimport Form from './Form';\nimport './index.less';\n\nexport interface SearchableTableProps {\n  /**\n  * 默认的分页信息\n  *\n  **/\n  defaultPagination?: Pagination,\n  /** 分页信息 */\n  pagination?: Pagination | boolean,\n\n  /** Cell position on game board. */\n  defaultSearchFormData?: object, \n  searchFormData?: object, \n  dataSource?: Array<object>, \n  columns: Array<object>, \n  className?: string,\n  style?: object,\n  tableClassName?: string,\n  tableStyle?: object,\n  tablePaginationProps?: object, \n  form: Function, \n  addonBefore: React.ReactNode, \n  addonAfter: React.ReactNode, \n  fetch?: Function, \n  transform?: Function, \n  convert?: Function, \n  [key: string]: any,\n}\n\nconst defaultPagination = {\n  current: 1,\n  pageSize: 10,\n  total: 0\n};\n\n/**\n * 带搜索表单的表格\n */\nexport default class SearchableTable extends Component<SearchableTableProps, SearchableTableState> {\n  static Column: typeof Column = Column;\n  static SearchForm: typeof Form = Form;\n  static propTypes = SearchableTablePropTypes;\n  static defaultProps = {\n    tablePaginationProps: {}\n  };\n\n  static getDerivedStateFromProps(props: SearchableTableProps, state: SearchableTableState) {\n    const newState: SearchableTableState = {};\n    let changed = false;\n\n    if (typeof props.pagination === 'object' && !equals(props.pagination, state.pagination)) {\n      newState.pagination = props.pagination;\n      changed = true;\n    };\n\n    if (props.searchFormData && !equals(props.searchFormData, state.searchFormData)) {\n      newState.searchFormData = props.searchFormData;\n      changed = true;\n    };\n\n    if (props.dataSource && !equals(props.dataSource, state.dataSource)) {\n      newState.dataSource = props.dataSource;\n      changed = true;\n    };\n\n    if (changed) return newState;\n    return null;\n  };\n\n  unmounted: boolean = false;\n\n  constructor(props: SearchableTableProps) {\n    super(props);\n    this.state = {\n      pagination: 'defaultPagination' in props ? props.defaultPagination :\n        typeof props.pagination === 'object' ? props.pagination : defaultPagination,\n      dataSource: 'defaultDataSource' in props ? props.defaultDataSource : props.dataSource,\n      searchFormData: 'defaultSearchFormData' in props ? props.defaultSearchFormData : props.searchFormData,\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.reload();\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  /**\n   * 根据 state 状态加载远程数据\n   */\n  reload = async () => {\n    const { searchFormData, pagination: { current, pageSize } } = this.state;\n    return await this.fetch({\n      searchFormData,\n      pagination: {\n        current,\n        pageSize\n      }\n    });\n  }\n\n  /**\n   * 获取远程数据\n   */\n  fetch = async ({ pagination: paginationParam, searchFormData, filters, sorter }: FetchParams) => {\n    const { transform, fetch, convert } = this.props;\n    if (!fetch) return;\n\n    let params = {\n      pagination: paginationParam,\n      searchFormData,\n      filters,\n      sorter\n    };\n    params = transform ? transform(params) : params;\n\n    this.setState({\n      loading: true\n    });\n\n    const response = await fetch(params).catch(() => {\n      if (this.unmounted) return;\n      this.setState({\n        loading: false\n      });\n    });\n    const res: Res = convert ? convert(response) : response;\n\n    if (this.unmounted) return;\n\n    const { dataSource, pagination } = res;\n\n    this.setState({\n      dataSource,\n      pagination: pagination,\n      searchFormData,\n      loading: false\n    });\n\n    return res;\n  }\n\n  /**\n   * 表单搜索\n   */\n  handleFetchViaForm = (searchFormData = {}) => {\n    const { pagination = {} } = this.state;\n    const { pageSize } = pagination;\n    this.setState({\n      searchFormData\n    }, () => {\n      this.fetch({\n        searchFormData,\n        pagination: {\n          current: 1,\n          pageSize\n        }\n      });\n    });\n  }\n\n  /**\n   * 表格 change\n   */\n  handleFetchViaTable = (pagination: Pagination, filters: Array<object>, sorter: Array<object>) => {\n    const { current, pageSize } = pagination;\n    const { searchFormData } = this.state;\n\n    this.fetch({\n      searchFormData,\n      pagination: {\n        current,\n        pageSize\n      },\n      filters, \n      sorter, \n    });\n  }\n\n  /**\n   * 渲染搜索表单。拆分，便于继承\n   */\n  renderForm() {\n    const { form } = this.props;\n    return form ? (\n      <div className='searchable-table-form-wrap'>\n        { form(this.handleFetchViaForm, this.state) }\n      </div>\n    ) : '';\n  }\n\n  /**\n   * 渲染表格。拆分，便于继承\n   */\n  renderTable() {\n    const { pagination: paginationState, dataSource, loading } = this.state;\n    const { tableClassName, tableStyle, pagination: paginationProp, tablePaginationProps, \n      columns: columnsProp, children, ...rest } = this.props;\n    const tableClassNames = classnames({\n      'searchable-table': true,\n      [tableClassName]: !!tableClassName\n    });\n    const tableProps = omit(['className', 'style', 'defaultPagination', 'defaultSearchInfo',\n      'searchInfo', 'defaultDataSource', 'dataSource', 'fetch', 'form'])(rest);\n    const pagination = typeof paginationProp === 'boolean' ? paginationProp :\n      { ...paginationProp, ...tablePaginationProps, ...paginationState };\n    const columns = children ? Children.toArray(children).map((child: React.ReactElement) => {\n      const props: ColumnProps = child.props;\n      const { cell, ...childRest } = props;\n      return {\n        ...childRest,\n        key: childRest.dataIndex,\n        render: cell\n      };\n    }) : columnsProp;\n\n    return <Table {...tableProps} loading={loading} dataSource={dataSource} columns={columns}\n      pagination={pagination} onChange={this.handleFetchViaTable}\n      className={tableClassNames} style={tableStyle} />;\n  }\n\n  render() {\n    const { className, style, addonBefore, addonAfter } = this.props;\n    const classNames = classnames({\n      'searchable-table-container': true,\n      [className]: !!className\n    });\n\n    return (\n      <div className={classNames} style={style}>\n        {this.renderForm()}\n\n        <div className='searchable-table-wrapper'>\n          {addonBefore}\n          {this.renderTable()}\n          {addonAfter}\n        </div>\n      </div>\n    );\n  }\n};try {\n    // @ts-ignore\n    SearchableTable.displayName = \"SearchableTable\";\n    // @ts-ignore\n    SearchableTable.__docgenInfo = { \"description\": \"\\u5E26\\u641C\\u7D22\\u8868\\u5355\\u7684\\u8868\\u683C\", \"displayName\": \"SearchableTable\", \"props\": { \"defaultPagination\": { \"defaultValue\": null, \"description\": \"\\u9ED8\\u8BA4\\u7684\\u5206\\u9875\\u4FE1\\u606F\", \"name\": \"defaultPagination\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"pagination\": { \"defaultValue\": null, \"description\": \"\\u5206\\u9875\\u4FE1\\u606F\", \"name\": \"pagination\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"defaultSearchFormData\": { \"defaultValue\": null, \"description\": \"Cell position on game board.\", \"name\": \"defaultSearchFormData\", \"required\": false, \"type\": { \"name\": \"object\" } }, \"searchFormData\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"searchFormData\", \"required\": false, \"type\": { \"name\": \"object\" } }, \"dataSource\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"dataSource\", \"required\": false, \"type\": { \"name\": \"object[]\" } }, \"columns\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"columns\", \"required\": true, \"type\": { \"name\": \"object[]\" } }, \"className\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"className\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"style\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"object\" } }, \"tableClassName\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"tableClassName\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"tableStyle\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"tableStyle\", \"required\": false, \"type\": { \"name\": \"object\" } }, \"tablePaginationProps\": { \"defaultValue\": { value: \"{}\" }, \"description\": \"\", \"name\": \"tablePaginationProps\", \"required\": false, \"type\": { \"name\": \"object\" } }, \"form\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"form\", \"required\": true, \"type\": { \"name\": \"Function\" } }, \"addonBefore\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"addonBefore\", \"required\": true, \"type\": { \"name\": \"any\" } }, \"addonAfter\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"addonAfter\", \"required\": true, \"type\": { \"name\": \"any\" } }, \"fetch\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fetch\", \"required\": false, \"type\": { \"name\": \"Function\" } }, \"transform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"transform\", \"required\": false, \"type\": { \"name\": \"Function\" } }, \"convert\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"convert\", \"required\": false, \"type\": { \"name\": \"Function\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/SearchableTable/index.tsx#SearchableTable\"] = { docgenInfo: SearchableTable.__docgenInfo, name: \"SearchableTable\", path: \"src/components/SearchableTable/index.tsx#SearchableTable\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"mappings":"AAAA","sourceRoot":""}